service: snow-alert

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: SnowAlertDB
functions:
  registerForAlerts:
    handler: registerForAlerts.handler
    events:
      - httpApi:
          path: /
          method: post

  makeAlerts:
    handler: makeAlerts.handler
    events:
      - schedule:
          rate: cron(0 13 * * ? 0)

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: SnowAlertDB

custom:
  datadog:
    site: us5.datadoghq.com
    flushMetricsToLogs: true
    apiKey: ${file(./dataDog.json):DATA_DOG_API}
    addLayers: true
    logLevel: "info"
    enableXrayTracing: false
    enableDDTracing: true
    enableDDLogs: true
    subscribeToAccessLogs: true
    enableTags: true
    injectLogContext: true
plugins:
  - serverless-plugin-datadog
